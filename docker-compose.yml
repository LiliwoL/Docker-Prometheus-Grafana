version: "3.8"

services:
  # ========================================
  # Apache
  # ========================================
  apache:
    image: httpd:latest
    container_name: monitoring_apache
    restart: unless-stopped
    ports:
      - 8080:80
      - 9117:9117

    # On lance d'abord le script qui va lancer l'exporter et ensuite le serveur apache
    command: >
      sh -c "/usr/local/apache2/apache_exporter_installer.sh && httpd-foreground"

    volumes:
      # Document Root
      - ./www:/usr/local/apache2/htdocs/

      # Script de configuration du apache exporter
      - ./config/apache/apache_exporter_installer.sh:/usr/local/apache2/apache_exporter_installer.sh

      # Configuration du module status
      - ./config/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./config/apache/httpd-info.conf:/usr/local/apache2/conf/extra/httpd-info.conf

  # ========================================
  # Prometheus
  # ========================================
  prometheus:
    image: prom/prometheus:latest

    volumes:
      # Configuration de Prometheus
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090


  grafana:
    image: grafana/grafana:latest

    env_file:
      - .env.docker
    environment:
      #https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_LOG_LEVEL: ${GF_SECURITY_DEBUG}

    volumes:
      # Configuration de Grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      # Sources de grafana
      - ./config/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    ports:
      - 3000:3000
    links:
      - prometheus

  # Add below section
  node-exporter:
    image: prom/node-exporter:latest
    container_name: monitoring_node_exporter
    restart: unless-stopped
    expose:
      - 9100